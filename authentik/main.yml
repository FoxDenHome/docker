---

services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
    env_file:
      - .env
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    image: ghcr.io/goauthentik/server:2024.8.0
    restart: always
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_LISTEN__METRICS: 127.0.0.1:9300
      AUTHENTIK_LISTEN__HTTP: 80
      AUTHENTIK_LISTEN__HTTPS: 443
    volumes:
      - media:/media
      - custom-templates:/templates
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis
  worker:
    image: ghcr.io/goauthentik/server:2024.8.0
    restart: always
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - media:/media
      - certs:/certs
      - custom-templates:/templates
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis
  ldap:
    image: ghcr.io/goauthentik/ldap:2024.8.0
    restart: always
    network_mode: service:server
    environment:
      AUTHENTIK_HOST: http://127.0.0.1:9000/
      AUTHENTIK_INSECURE: 'false'
      AUTHENTIK_HOST_BROWSER: ''
      AUTHENTIK_TOKEN: ${LDAP_AUTHENTIK_TOKEN}
      SSL_CERT_DIR: /etc/ssl/certs
      AUTHENTIK_LISTEN__METRICS: 127.0.0.1:9301
      AUTHENTIK_LISTEN__LDAPS: 636
      AUTHENTIK_LISTEN__LDAP: 389
volumes:
  database: {}
  redis: {}
  media: {}
  certs: {}
  custom-templates: {}
