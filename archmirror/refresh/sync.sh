#!/bin/bash
set -euo pipefail

# 0 */3 * * * /bin/sh -c 'sleep $[RANDOM%60]m && screen -dmS sync-arch /opt/icefox/sync-arch.sh'
#
########
#
# Copyright Â© 2014-2019 Florian Pritz <bluewind@xinu.at>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.
#
########
#
# This is a simple mirroring script. To save bandwidth it first checks a
# timestamp via HTTP and only runs rsync when the timestamp differs from the
# local copy. As of 2016, a single rsync run without changes transfers roughly
# 6MiB of data which adds up to roughly 250GiB of traffic per month when rsync
# is run every minute. Performing a simple check via HTTP first can thus save a
# lot of traffic.

# Directory where the repo is stored locally. Example: /srv/repo
target="/mnt/archmirror"

# Lockfile path
lock="/tmp/syncrepo.lck"

# If you want to limit the bandwidth used by rsync set this.
# Use 0 to disable the limit.
# The default unit is KiB (see man rsync /--bwlimit for more)
bwlimit=0

# The source URL of the mirror you want to sync from.
# If you are a tier 1 mirror use rsync.archlinux.org, for example like this:
# rsync://rsync.archlinux.org/ftp_tier1
# Otherwise chose a tier 1 mirror from this list and use its rsync URL:
# https://www.archlinux.org/mirrors/
source_url="rsync://${ARCHMIRROR_SOURCE}/archlinux/"

# An HTTP(S) URL pointing to the 'lastupdate' file on your chosen mirror.
# If you are a tier 1 mirror use: https://rsync.archlinux.org/lastupdate
# Otherwise use the HTTP(S) URL from your chosen mirror.
lastupdate_url="https://${ARCHMIRROR_SOURCE}/lastupdate"

#### END CONFIG

mkdir -p "${target}"

exec 9>"${lock}"
flock -n 9 || exit 0

# Cleanup any temporary files from old run that might remain.
# Note: You can skip this if you have rsync newer than 3.2.3
# not affected by https://github.com/WayneD/rsync/issues/192
find "${target}" -name '.~tmp~' -delete

rsync_cmd() {
	local -a cmd=(rsync -rlptH --safe-links --delete-delay --delay-updates
		"--timeout=600" "--contimeout=60" --no-motd)

	if stty &>/dev/null; then
		cmd+=(-h -v --progress)
	else
		cmd+=(--quiet)
	fi

	if ((bwlimit>0)); then
		cmd+=("--bwlimit=$bwlimit")
	fi

	"${cmd[@]}" "$@"
}

export FORCE_SYNC="${ARCHMIRROR_FORCE_SYNC-}"

while :;
do
	export LASTUPDATE="$(curl -fLs "${lastupdate_url}")"
	#  only run when there are changes
	if [ -f "${target}/lastupdate" ] && [ "${LASTUPDATE}" = "$(cat "${target}/lastupdate")" ]; then
		if [ -z "${FORCE_SYNC}" ]; then
			# keep lastsync file in sync for statistics generated by the Arch Linux website
			rsync_cmd "${source_url}/lastsync" "${target}/lastsync"
			echo 'Skipping update, update lastsync only'
			exit 0
		else
			echo 'ARCHMIRROR_FORCE_SYNC is set, forcing sync'
		fi
	fi

	echo 'Running main rsync...'
	rsync_cmd \
		--exclude='*.links.tar.gz*' \
		--exclude='/other' \
		--exclude='/sources' \
		--exclude='/lastupdate' \
		"${source_url}" \
		"${target}"

	echo 'Updating lastupdate...'
	echo "$LASTUPDATE" > "${target}/lastupdate"
	echo 'Sync complete. Waiting 60 seconds to make sure lastupdate is still current'

	export FORCE_SYNC=""
	sleep 60
done
