version: "2.4"
services:
  prometheus:
    image: prom/prometheus:latest
    restart: always
    command: --storage.tsdb.retention.time=1y --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - prometheus_config:/etc/prometheus
      - prometheus_data:/data
    networks:
      monitoring_net: {}
      vlan3:
        ipv4_address: 192.168.3.34
    links:
      - telegraf:telegraf
      - telegraf:telegraf.foxden.network
      - minico2:minico2
      - minico2:minico2.foxden.network
    extra_hosts:
      - ntp.foxden.network:192.168.3.10
  grafana:
    image: grafana/grafana:latest
    restart: always
    environment:
      GF_RENDERING_SERVER_URL: http://grafana-renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
    volumes:
      - grafana_config:/etc/grafana
      - grafana_data:/var/lib/grafana
    networks:
      monitoring_net: {}
      vlan3:
        ipv4_address: 192.168.3.35
  grafana-renderer:
    image: grafana/grafana-image-renderer:latest
    restart: always
    networks:
      monitoring_net: {}
  telegraf:
    image: telegraf:latest
    restart: always
    command: --config-directory /etc/telegraf/telegraf.d
    volumes:
      - telegraf_config:/etc/telegraf
      - /var/lib/mibs:/usr/share/snmp/mibs:ro
    networks:
      monitoring_net: {}
      vlan1:
        ipv4_address: 192.168.1.33

  minico2: # Temporary, until sensor arrives
    image: ghcr.io/doridian/docker-minico2/minico2:latest
    restart: always
    devices:
      - /dev/minico2:/dev/minico2
    networks:
      monitoring_net: {}

networks:
  monitoring_net: {}

volumes:
  prometheus_config:
    external: true
  prometheus_data:
    external: true
  grafana_config:
    external: true
  grafana_data:
    external: true
  telegraf_config:
    external: true
