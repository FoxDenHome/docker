---
# This configuration file is documented in docs/02-configuration.md.
# You can get all default values with `akvorado orchestrator /dev/null
# --dump --check` or `docker-compose run akvorado-orchestrator
# orchestrator /dev/null --dump --check`.
kafka:
  topic: flows
  version: 3.3.1
  brokers:
    - kafka:9092
  topic-configuration:
    num-partitions: 8
    replication-factor: 1
    config-entries:
      # The retention policy in Kafka is mainly here to keep a buffer
      # for ClickHouse.
      segment.bytes: 1073741824
      retention.ms: 86400000 # 1 day
      cleanup.policy: delete
      compression.type: producer

clickhouse:
  orchestrator-url: http://akvorado-orchestrator:8080
  kafka:
    consumers: 4
  servers:
    - clickhouse:9000
  asns:
  networks:
    10.1.0.0/16:
      name: MGMT
      role: VLAN
    10.2.0.0/16:
      name: LAN
      role: VLAN
    10.3.0.0/16:
      name: DMZ
      role: VLAN
    10.4.0.0/16:
      name: LabNet
      role: VLAN
    10.5.0.0/16:
      name: Security
      role: VLAN
    10.6.0.0/16:
      name: Hypervisor
      role: VLAN
    10.99.0.0/16:
      name: VPN-S2S
      role: VPN
    10.100.0.0/16:
      name: VPN-Client
      role: VPN
  network-sources:


inlet:
  kafka:
    compression-codec: zstd
  geoip:
    optional: true
    # When running on Docker, these paths are inside the container.
    # Check docker-compose.yml for details.
    asn-database: /usr/share/GeoIP/GeoLite2-ASN.mmdb
    geo-database: /usr/share/GeoIP/GeoLite2-Country.mmdb
  snmp:
    workers: 10
  flow:
    inputs:
      - type: udp
        decoder: netflow
        listen: 0.0.0.0:2055
        workers: 6
        receive-buffer: 10485760
      - type: udp
        decoder: sflow
        listen: 0.0.0.0:6343
        workers: 6
        receive-buffer: 10485760
  core:
    workers: 6
    default-sampling-rate: 1
    exporter-classifiers:
      - ClassifyRole("edge")
    interface-classifiers:
      - Interface.Name == "wan" && ClassifyProvider("Ziply") && ClassifyConnectivity("direct") && ClassifyExternal()
      - Interface.Name == "6to4-redfox" && ClassifyProvider("Vultr") && ClassifyConnectivity("6in4") && ClassifyExternal()
      - ClassifyConnectivity("core") && ClassifyInternal()

console:
  http:
    cache:
      type: redis
      server: redis:6379
  database:
    saved-filters:
      # These are prepopulated filters you can select in a drop-down
      # menu. Users can add more filters interactively.
      - description: "From Netflix"
        content: >-
          InIfBoundary = external AND SrcAS = AS2906
      - description: "From GAFAM"
        content: >-
          InIfBoundary = external AND
          SrcAS IN (AS15169, AS16509, AS32934, AS6185, AS8075)
